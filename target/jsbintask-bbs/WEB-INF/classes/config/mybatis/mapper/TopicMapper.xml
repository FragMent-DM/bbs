<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jsbintask.bbs.mapper.TopicMapper">
    <!--定义topic类的resultMap-->
    <resultMap id="topicVOResultMap" type="cn.jsbintask.bbs.po.TopicVO">
        <id column="id" property="topic_id"/>
        <result column="reply_number" property="reply_number"/>
        <result column="topic" property="topic"/>
        <result column="content" property="content"/>
        <result column="create_time" property="create_time"/>
        <result column="flag" property="flag"/>
        <result column="isindex" property="index"/>
        <result column="user_id" property="user_id"/>

        <!--一对一关联一个用户，一个主题，只能是一个用户发出来的-->
        <association property="user" javaType="cn.jsbintask.bbs.po.User" column="user_id"
                     select="cn.jsbintask.bbs.mapper.UserMapper.findUserById"/>

        <!--一对多关联所有的回复-->
        <collection property="oneToArticles" javaType="java.util.ArrayList" ofType="cn.jsbintask.bbs.po.Article"
                    column="id" select="cn.jsbintask.bbs.mapper.ArticleMapper.findArticlesByTopicId" fetchType="lazy"/>

    </resultMap>

    <!--提供给首页的显示所有的帖子的地方使用，显示所有正常状态的帖子-->
    <select id="findAllTopic" resultMap="topicVOResultMap" parameterType="map">
        SELECT t.*, u.username
        from topic t, user u
        where t.user_id = u.user_id and t.flag = 1
        ORDER BY t.isindex DESC ,
        <choose>
            <when test="sortType != null">
                t.reply_number DESC
            </when>
            <otherwise>
                t.create_time DESC
            </otherwise>
        </choose>
        LIMIT #{topicPosition}, #{pageSize}
    </select>

    <!--显示所有被删除的帖子 -->
    <select id="findDeletedTopic" resultMap="topicVOResultMap" parameterType="map">
        SELECT * FROM topic
        <where>
            flag = 0
        </where>
        <choose>
            <when test="type=='time'">
                <if test="orderBy=='ASC'">
                    ORDER BY create_time ASC
                </if>
                <if test="orderBy=='DESC'">
                    ORDER BY create_time DESC
                </if>
            </when>
            <otherwise>
                order by reply_number #{orderBy}
                <if test="orderBy=='ASC'">
                    ORDER BY reply_number ASC
                </if>
                <if test="orderBy=='DESC'">
                    ORDER BY reply_number DESC
                </if>
            </otherwise>
        </choose>
    </select>


    <!--根据帖子的名字查找模糊查找帖子-->
    <select id="findTopicByLikeName" parameterType="string" resultMap="topicVOResultMap">
        <bind name="var" value="'%' + _parameter + '%'"/>
        SELECT t.*, u.username
        from topic t, user u
        where t.user_id = u.user_id and t.flag = 1 AND t.topic LIKE #{var}
        ORDER BY t.isindex DESC
    </select>

    <!--根据id找主题-->
    <select id="findTopicVOById" parameterType="int" resultMap="topicVOResultMap">
        SELECT *
        FROM topic
        WHERE id = #{topic_id}
    </select>

    <!--根据用户id获得这个用户的所有帖子（只显示状态正常的帖子）-->
    <select id="findTopicByUserId" parameterType="int" resultMap="topicVOResultMap">
        SELECT *
        FROM topic
        WHERE user_id = #{_parameter}
          AND flag = 1
        ORDER BY isindex DESC, create_time DESC
    </select>

    <!--查找所有帖子的数量-->
    <select id="findTopicTotal" resultType="integer">
        SELECT count(*)
        FROM topic
    </select>

    <!--用户发帖，插入一条帖子-->
    <insert id="postTopic" parameterType="map">
        INSERT INTO topic (user_id, topic, create_time, content)
        VALUES (#{user_id}, #{topic}, now(), #{content})
    </insert>

    <!--当一个用户回复该条帖子后，为改条帖子的回复数+1 -->
    <update id="updateReply_num" parameterType="int">
        UPDATE topic
        set reply_number = reply_number + 1
        WHERE id = #{_parameter}
    </update>

    <!--更新帖子的状态，是否置顶，是否删除-->
    <update id="updateTopicsStatus" parameterType="map">
        UPDATE topic set
        <choose>
            <when test="type=='flag'">
                flag = #{status}
            </when>
            <otherwise>
                isindex = #{status}
            </otherwise>
        </choose>
        <where>
            id in
            <foreach collection="topic_ids" item="topic_id" open="(" close=")" separator=",">
                #{topic_id}
            </foreach>
        </where>
    </update>


</mapper>